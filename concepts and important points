STACK:TYPES 1-STATIC 2-DYNAMIC(USING LL)  Infix to Postfix Stack  Expression Evaluation Stack  Recursion Stack   Memory Management Stack 
Balanced Parenthesis Stack   Undo-Redo Stack
APPLICATIONS OF STACK:

Monotonic stacks(from bottom eiter increasing or decreasing) can be used to solve many problems in linear time that would otherwise require quadratic time complexity.
applications: sliding window maximum prblm,nearest smallest element to left or right of ana array,max area of a histogram



RECURSION:
HEAD,TAIL,BODY


The recursive Fibonacci algorithm has overlapping subproblems dynamic programming ImproveS such overlapped algorithms.
a few algorithms, (e.g. merge sort, quick sort, etcâ€¦) result in optimal time complexity using recursion.

Base Case:
One critical requirement of recursive functions is the termination point or base case. 
Every recursive program must have a base case to make sure that the function will terminate. 
Missing base case results in unexpected behavior.

BACKTRACKING:
recursions types: parameterized(printing at the end,it prints the value ),f(n)=f) and functional(f(n)=n+f(n-1),it returns the value).
GRAPHS :
DFS:
INORDER TRAVERSAL : it gives the non decreasing order incase of a binary search tree,to get it in non increasing order or descending order we need 
to reverse the order.

